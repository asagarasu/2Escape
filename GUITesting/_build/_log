### Starting build.
# Target: test.ml.depends, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), syntax(camlp4o), extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -modules test.ml > test.ml.depends
# Target: test.cmo, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), syntax(camlp4o), byte, compile, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -o test.cmo test.ml
+ ocamlfind ocamlc -c -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -o test.cmo test.ml
File "test.ml", line 21, characters 6-19:
Warning 26: unused variable replace_child.
# Target: test.d.cmo, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), syntax(camlp4o), byte, compile, debug, extension:cmo, extension:ml, file:test.d.cmo, file:test.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -o test.d.cmo test.ml
+ ocamlfind ocamlc -c -g -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -o test.d.cmo test.ml
File "test.ml", line 21, characters 6-19:
Warning 26: unused variable replace_child.
# Target: test.d.byte, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), syntax(camlp4o), byte, debug, dont_link_with, extension:byte, file:test.d.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -g -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt test.d.cmo -o test.d.byte
# Target: test.d.js, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), syntax(camlp4o), extension:js, file:test.d.js, js_of_ocaml, pretty, quiet, traverse }
js_of_ocaml --no-runtime --pretty +js_of_ocaml-compiler/runtime.js -o test.d.js test.d.byte
# Compilation successful.
