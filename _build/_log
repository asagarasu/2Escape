### Starting build.
# Target: server.ml.depends, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), extension:ml, file:server.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -modules server.ml > server.ml.depends # cached
# Target: init.ml.depends, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), extension:ml, file:init.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -modules init.ml > init.ml.depends
# Target: json_parser.mli.depends, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), extension:mli, file:json_parser.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -modules json_parser.mli > json_parser.mli.depends # cached
# Target: helper.ml.depends, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), extension:ml, file:helper.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -modules helper.ml > helper.ml.depends # cached
# Target: helper.cmo, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), byte, compile, extension:cmo, extension:ml, file:helper.cmo, file:helper.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -o helper.cmo helper.ml # cached
# Target: state.mli.depends, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -modules state.mli > state.mli.depends # cached
# Target: cutscene.mli.depends, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), extension:mli, file:cutscene.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -modules cutscene.mli > cutscene.mli.depends # cached
# Target: cutscene.cmi, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), byte, compile, extension:mli, file:cutscene.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -o cutscene.cmi cutscene.mli # cached
# Target: state.cmi, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), byte, compile, extension:mli, file:state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -o state.cmi state.mli # cached
# Target: json_parser.cmi, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), byte, compile, extension:mli, file:json_parser.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -o json_parser.cmi json_parser.mli # cached
# Target: init.cmo, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), byte, compile, extension:cmo, extension:ml, file:init.cmo, file:init.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -o init.cmo init.ml
# Target: server.cmo, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), byte, compile, extension:cmo, extension:ml, file:server.cmo, file:server.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -o server.cmo server.ml # cached
# Target: json_parser.ml.depends, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), extension:ml, file:json_parser.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -modules json_parser.ml > json_parser.ml.depends # cached
# Target: json_parser.cmo, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), byte, compile, extension:cmo, extension:ml, file:json_parser.cmo, file:json_parser.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -o json_parser.cmo json_parser.ml # cached
# Target: state.ml.depends, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -modules state.ml > state.ml.depends # cached
# Target: state.cmo, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), byte, compile, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -o state.cmo state.ml # cached
# Target: cutscene.ml.depends, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), extension:ml, file:cutscene.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -modules cutscene.ml > cutscene.ml.depends # cached
# Target: cutscene.cmo, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), byte, compile, extension:cmo, extension:ml, file:cutscene.cmo, file:cutscene.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit -o cutscene.cmo cutscene.ml # cached
# Target: server.byte, tags: { package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml.syntax), package(lwt), package(lwt.unix), package(oUnit), package(yojson), syntax(camlp4o), byte, dont_link_with, extension:byte, file:server.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -syntax camlp4o -package js_of_ocaml.syntax -package js_of_ocaml -package js_of_ocaml-lwt -package lwt -package lwt.unix -package yojson -package oUnit cutscene.cmo helper.cmo state.cmo json_parser.cmo init.cmo server.cmo -o server.byte
# Compilation successful.
